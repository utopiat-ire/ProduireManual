<!doctype html>
<html lang="ja"><!-- InstanceBegin template="/Templates/reference2020.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- InstanceBeginEditable name="doctitle" -->
	<title>配列 - プロデルマニュアル</title><!-- InstanceEndEditable -->
	<link href="../css/bootstrap.min.css" rel="stylesheet">
	<link href="../css/style.css" rel="stylesheet">
	<link href="../css/ie10-viewport-bug-workaround.css" rel="stylesheet">
	<script src="../js/html5shiv-3.7.3.min.js"></script>
	<script src="../js/respond-1.4.2.min.js"></script>
<!-- InstanceBeginEditable name="head" -->
	<meta name="keywords" content="種類,基本型,データ型">
    <meta name="description" content="日本語プログラミング言語プロデルのデータ型である「配列」種類に含まれる手順や設定項目を使う方法"><!-- InstanceEndEditable -->
</head>

<body>
	<nav class="navbar navbar-fixed-top navbar-inverse">
		<div class="container-fluid">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
					<span class="sr-only">メニュー開閉</span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<a href="../index.htm"><img src="../img/rdr2018-32.png" class="rdricon" alt="プロデル"></a>
				<a class="navbar-brand" href="#">
					<!-- InstanceBeginEditable name="HeaderTitle" -->配列<!-- InstanceEndEditable -->
				</a>
			</div>
			<div id="navbar" class="collapse navbar-collapse">
				<ul class="nav navbar-nav navbar-right">
					<li id="cat_top"><a href="../index.htm">目次</a></li>
					<li id="cat_syntax"><a href="../syntax/index.htm">言語仕様</a></li>
					<li id="cat_lookup"><a href="../lookup/index.htm">逆引き辞典</a></li>
					<li id="cat_datatype"><a href="index.htm">データ型</a></li>
					<li id="cat_gui" class="hidden-sm"><a href="../wincontrol/index.htm">GUI部品</a></li>
					<li id="cat_verbs" class="hidden-sm"><a href="../verbs/index.html">手順一覧</a></li>
					<li id="cat_devenv" class="hidden-sm"><a href="../devenv/index.html">開発環境</a></li>
					<li class="dropdown">
						<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">機能別 <span class="caret"></span></a>
						<ul class="dropdown-menu">
							<li id="cat_core"><a href="../core/index.htm">基本機能</a></li>
							<li id="cat_file"><a href="../file/index.htm">ファイル操作</a></li>
							<li id="cat_graphics"><a href="../pgraphics/index.htm">画像描画</a></li>
							<li id="cat_office"><a href="../office/index.htm">Microsoft Office操作</a></li>
							<li id="cat_data"><a href="../data/index.htm">データ形式/データベース</a></li>
							<li id="cat_net"><a href="../network/index.htm">ネットワーク</a></li>
							<li id="cat_mail"><a href="../network/mail/index.htm">メール</a></li>
							<li class="divider"></li>
							<li id="cat_system"><a href="../plugins/systeminfo/index.htm">システム情報取得</a></li>
							<li id="cat_media"><a href="../plugins/multimedia/index.htm">メディア再生制御</a></li>
							<li id="cat_crypto"><a href="../plugins/crypto/index.htm">暗号化/ハッシュ計算</a></li>
							<li id="cat_speech"><a href="../plugins/speech/index.htm">音声処理</a></li>
							<li id="cat_reflection"><a href="../core/reflection/index.htm">リフレクション</a></li>
							<li id="cat_msil"><a href="../plugins/msil/index.htm">MSIL生成</a></li>
							<li><a href="../tools/web/index.htm">Webアプリ</a></li>
							<li class="divider"></li>
							<li><a href="../wincontrol/index.htm">GUI部品</a></li>
							<li><a href="../verbs/index.html">手順一覧</a></li>
							<li><a href="../devenv/index.html">開発環境</a></li>
						</ul>
					</li>
				</ul>
			</div><!-- /.nav-collapse -->
		</div><!-- /.container -->
	</nav><!-- /.navbar -->

	<div id="main" class="container-fluid">
<!-- InstanceBeginEditable name="Content" -->
<div class="row">
	<div id="reftitle" class="col-md-12">
	  <ul class="breadcrumb" data-category="datatype">
	    <li><a href="../index.htm">プロデル</a></li>
	    <li><a href="index.htm">データ型</a></li>
	    <li>配列</li>
      </ul>
	  <h1>配列</h1>
    </div>
	<div id="refsidebar" class="col-md-3">
		<p><span class="label label-warning">型変換</span> <a href="../syntax/ordinal.htm" class="label label-default">序数詞設定</a> <a href="../sumire.htm" class="label label-info">スミレ</a></p>
		<ul class="jumpnavi nav nav-pills"><li><a href="#head">概要</a></li><li><a href="#手順">手順</a></li><li><a href="#設定項目">設定項目</a></li><li><a href="#サンプルコード">サンプルコード</a></li><li><a href="#型変換">型変換</a></li></ul>
		<h3>関連ページ</h3>
        <ul>
          <li><a href="../syntax/array.html">配列の文法</a></li>
          <li><a href="fixedarray.htm">「固定長配列」種類</a></li>
        </ul>
        <p>&nbsp;</p>
	</div>
<div id="refcontent" class="col-md-8">
	<h2 id="head">概要</h2>
	<p>1番から順番に内容を持っている配列を表す種類です。</p>
	<h2>生成する方法</h2>
		<p>配列定数式で配列を生成できます。</p>
		<pre class="code">一覧は｛100,200,300｝
一覧は｛「おはよう」,「こんにちは」,「こんばんわ」｝</pre>
		<p>要素のデータ型を指定する場合には次のように型名を指定します。</p>
        <pre class="format"><strong>《データ型》</strong>の配列を作る</pre>
		<p>文字列から配列を生成するには<a href="string.htm#配列化">「配列化」手順</a>を使います。</p>
		<h2 id="手順">手順</h2>
		<p>次の手順が使用できます。要素型は配列宣言の要素のデータ型を指します。</p>
		<div id="methodlist"><a href="#交換する">交換する</a>　<a href="#探す">探す</a>　<a href="#大小区別しないで探す">大小区別しないで探す</a>　<a href="#完全一致で探す">完全一致で探す</a>　<a href="#取り出す">取り出す</a>　<a href="#大小区別しないで取り出す">大小区別しないで取り出す</a>　<a href="#完全一致で取り出す">完全一致で取り出す</a>　<a href="#消す">消す</a>　<a href="#繋げる">繋げる</a>　<a href="#最大値">最大値</a>　<a href="#最小値">最小値</a>　<a href="#合計">合計</a>　<a href="#平均">平均</a>　<a href="#偏差値">偏差値</a>　<a href="#加える">加える</a>　<a href="#追加する">追加する</a>　<a href="#一括追加する">一括追加する</a>　<a href="#挿入する">挿入する</a>　<a href="#並べ替える">並べ替える</a>　<a href="#重複を消す">重複を消す</a>　<a href="#切り出す">切り出す</a>　</div>
		<div id="methods">
			<h3>【自分】から【番号A】番目と【番号B】番目を<a name="交換する">交換する</a>：配列</h3>
			<p>指定した番号の要素の値を交換します。</p>
			<pre class="code">一覧は｛「東京」,「名古屋」,「大阪」｝
一覧を表示する

一覧から１番目と３番目を交換して、結果とする
結果を表示する
<em>//{大阪,名古屋,東京}</em></pre>
			<h3>【自分】から【キーワード】を<a name="探す">探す</a>：数値</h3>
			<p>配列からキーワードが含まれる要素を探して、その番号を配列で表します</p>
			<h4 data-rel="探す">配列からキーワード検索する</h4>
			<pre class="code">一覧は｛「トカゲ」,「エリマキトカゲ」,「エリ」｝

一覧から「カゲ」を探して、結果とする
結果を表示する</pre>
			<h3>【自分】から【キーワード】を<a name="大小区別しないで探す">大小区別しないで探す</a>：数値</h3>
			<p>配列からキーワードが含まれる要素を探して、その番号を配列で表します。<br>
				探す際に大文字と小文字は区別されません。</p>
			<pre class="code">一覧は｛「Hello」,「Open」,「Load」｝

一覧から「O」を大小区別しないで探して、結果とする
結果を表示する</pre>
			<h3>【自分】から【キーワード】を<a name="完全一致で探す">完全一致で探す</a>：数値</h3>
			<p>配列からキーワードと完全に一致する要素を探して、その番号を配列で表します。</p>
			<pre class="code">一覧は｛「トカゲ」,「エリマキトカゲ」,「エリ」｝

一覧から「トカゲ」を完全一致で探して、結果とする
結果を表示する</pre>
			<h3>【自分】から【キーワード】を<a name="取り出す">取り出す</a>：数値</h3>
			<p>配列からキーワードが含まれる要素を探して、その内容を配列で表します</p>
			<pre class="code">一覧は｛「トカゲ」,「エリマキトカゲ」,「エリ」｝

一覧から「カゲ」を取り出して、結果とする
結果を表示する</pre>
			<h3>【自分】から【キーワード】を<a name="大小区別しないで取り出す">大小区別しないで取り出す</a>：数値</h3>
			<p>配列からキーワードが含まれる要素を探して、その内容を配列で表します。<br>
				探す際に大文字と小文字は区別されません。</p>
			<pre class="code">一覧は｛「Hello」,「Open」,「Load」｝

一覧から「O」を大小区別しないで取り出して、結果とする
結果を表示する</pre>
			<h3>【自分】から【キーワード】を<a name="完全一致で取り出す">完全一致で取り出す</a>：数値</h3>
			<p>配列からキーワードと完全に一致する要素を探して、その内容を配列で表します。</p>
			<pre class="code">一覧は｛「トカゲ」,「エリマキトカゲ」,「エリ」｝

一覧から「トカゲ」を完全一致で取り出して、結果とする
結果を表示する</pre>
			<h3>【自分】の【何】番目を<a name="消す">消す</a>：配列</h3>
			<p>配列の指定した列または行を消します</p>
			<pre class="code">一覧は｛「りんご」,「なし」,「ぶどう」｝
一覧の3番目を消す
一覧を表示する
<em>//{りんご,なし}</em></pre>
			<h3>【自分】を〈【文字】で〉<a name="繋げる">繋げる</a>：文字列</h3>
			<p>配列の要素を文字列化して、順番に一つの文字列として繋げます。<br>
				〈文字〉を指定すると、要素の間に区切り文字を入られます</p>
			<h4 data-ref="繋げる">配列の要素を一つの文字列に繋ぎ合わせる</h4>
			<pre class="code">一覧は｛「アイス」,「スイカ」,「かき氷」｝
一覧を「＆」で繋げて、結果とする
結果を表示する
<em>//アイス＆スイカ＆かき氷</em></pre>
			<h3>【自分】の<a name="最大値">最大値</a>：数値</h3>
			<p>配列の数値でもっとも大きい値を求めます<span class="label label-warning">名詞手順</span></p>
			<h4 data-ref="最大値">配列から最大値を調べる</h4>
			<pre class="code">一覧は｛132,473,735,532｝
一覧の最大値を表示する</pre>
			<h3>【自分】の<a name="最小値">最小値</a>：数値</h3>
			<p>配列の数値でもっとも小さい値を求めます<span class="label label-warning">名詞手順</span></p>
			<h4 data-ref="最小値">配列から最小値を調べる</h4>
			<pre class="code">一覧は｛132，473，735，532｝
一覧の最小値を表示する</pre>
			<h3>【自分】の<a name="合計">合計</a>：数値</h3>
			<p>配列の数値を足して合計を求めます<span class="label label-warning">名詞手順</span></p>
			<h4 data-ref="合計">合計を求める</h4>
			<pre class="code">一覧は｛132，473，735，532｝
一覧の合計を表示する</pre>
			<h3>【自分】の<a name="平均">平均</a>：数値</h3>
			<p>配列の数値から平均値を求めます</p>
			<h4 data-ref="平均">平均を求める</h4>
			<pre class="code">一覧は{132,473,735,532}
<b>一覧の平均</b>を表示する</pre>
			<h3>【自分】の<a name="偏差値">偏差値</a>：配列</h3>
			<p>配列の数値の偏差値をそれぞれ求めます<span class="label label-warning">名詞手順</span></p>
			<h4 data-ref="偏差値">偏差値を求める</h4>
<pre class="code">成績は{52,14,14,95,64,58}
<b>成績の偏差値</b>を表示する</pre>
			<h3>【自分】へ【内容：要素型】を<a name="加える">加える</a></h3>
			<p>配列の最後へ指定した内容を加えます</p>
			<pre class="code">一覧は｛「りんご」,「なし」,「ぶどう」｝
<strong>一覧へ「みかん」を加える</strong>
一覧を表示する
<em>//{りんご,なし,ぶどう,みかん}</em></pre>
			<h3>【自分】へ【内容：要素型】を<a name="追加する">追加する</a></h3>
			<p>配列の最後へ指定した内容を加えます。(加える)と同じです。</p>
			<pre class="code">一覧は｛「りんご」,「なし」,「ぶどう」｝
<b>一覧へ「みかん」を追加する</b>
一覧を表示する
<em>//{りんご,なし,ぶどう,みかん}</em></pre>
			<h3>【自分】へ【配列】を<a name="一括追加する">一括追加する</a></h3>
			<p>配列の最後へ指定した配列の内容をすべて追加します</p>
			<pre class="code">一覧は｛「あ」,「い」,「う」｝
<b>一覧に｛「え」,「お」｝を一括追加する</b>
一覧を表示する</pre>
			<h3>【自分】の【何】番目へ【内容：要素型】を<a name="挿入する">挿入する</a></h3>
			<p>配列の指定した位置の前に内容を挿入します</p>
			<pre class="code">一覧は｛「りんご」,「なし」,「ぶどう」｝
<strong>一覧の2番目へ「オレンジ」を挿入する</strong>
一覧を表示する
<em>//{りんご,オレンジ,なし,ぶどう}</em></pre>
			<h3>【配列】の【何】列目へ【内容：要素型】を挿入する</h3>
			<p>配列の指定した位置の前に内容を挿入します</p>
			<pre class="code">一覧は{「ABC」,「EEE」,「DDD」,「CCC」}
<strong>一覧の3番目へ「123」を挿入して</strong>、表示する</pre>
			<h3>【自分】を【方法】に<a name="並べ替える">並べ替える</a></h3>
			<p>配列を指定された方法で、並べ替えます。</p>
			<p>【方法】には、次の方法が指定できます。</p>
			<table class="table table-striped table-bordered">
				<tr>
					<th>昇順</th>
					<td>昇順に並べ替えます。要素のデータ型に応じて比較されます。</td>
				</tr>
				<tr>
					<th>降順</th>
					<td>降順に並べ替えます。要素のデータ型に応じて比較されます。</td>
				</tr>
				<tr>
					<th>名前順</th>
					<td>文字列として昇順に並べ替えます。要素を文字列へ変換して比較します。</td>
				</tr>
				<tr>
					<th>逆名前順</th>
					<td>文字列として降順に並べ替えます。要素を文字列へ変換して比較します。</td>
				</tr>
				<tr>
					<th>大きい順</th>
					<td>数値の大きい順に並べ替えます。要素を倍浮動小数へ変換して比較します。</td>
				</tr>
				<tr>
					<th>小さい順</th>
					<td>数値の小さい順に並べ替えます。要素を倍浮動小数へ変換して比較します。</td>
				</tr>
				<tr>
					<th>日付順</th>
					<td>日時の新しい順に並べ替えます。要素を日時形式へ変換して比較します。</td>
				</tr>
				<tr>
					<th>逆日付順</th>
					<td>日時の古い順に並べ替えます。要素を日時形式へ変換して比較します。</td>
				</tr>
				<tr>
					<th>逆</th>
					<td>配列の要素を逆順に並べ替えます。</td>
				</tr>
				<tr>
					<th>よみがな順</th>
					<td>よみがな順に並べ替えます。要素を文字列へ変換して比較します。スミレでは未対応です。</td>
				</tr>
				<tr>
					<th>逆よみがな順</th>
					<td>よみがなを逆順に並べ替えます。要素を文字列へ変換して比較します。スミレでは未対応です。</td>
				</tr>
				<tr>
					<th>不規則<br>
						ランダム<br>
						適当</th>
					<td>要素の内容に関係なく、不規則に並べ替えます。</td>
                </tr>
            </table>
			<h4 data-ref="並べ替える">配列を並べ替える</h4>
			<pre class="code">一覧は｛「ABC」,「EEE」,「DDD」,「CCC」｝
一覧を表示する

<b>一覧を名前順に並べ替る
</b>一覧を表示する
</pre>
<pre class="code">一覧は｛30,40,10,20｝
一覧を表示する

<b>一覧を大きい順に並べ替える</b>
一覧を表示する

<b>一覧を小さい順に並べ替える</b>
一覧を表示する

一覧を不規則に並べ替える
一覧を表示する</pre>
			<h3>【自分】を【方法：匿名手順】で並べ替える</h3>
			<p>配列を指定した手順を使って、並べ替えます(カスタムソート)。<br>
				配列内の要素を比較するときに、2つの要素について大小比較を行いますが、そのときの判断式を匿名手順を使って行えます。</p>
			<p>【方法】には、並べ替えを判断するための手順を指定します。</p>
			<h4 data-rel="並べ替える">カスタムソートする</h4>
			<pre class="code">一覧は{6,12,3,5}
一覧を『
	それを{左,右}とみなす
	左&gt;右なら
		-1を返す
	他で左&lt;右なら
		1を返す
	そうでなければ
		0を返す
	そして
』で並べ替える
一覧を表示する	//{12,6,5,3}</pre>
			<h3>【自分】から<a name="重複を消す">重複を消す</a>：配列</h3>
			<p>配列の要素から同じ値の要素を消します。</p>
			<pre class="code">一覧={1,3,3,4,1,6,7,6,7,8}
一覧から<strong>重複を消して</strong>表示する</pre>
			<h3>【自分】の【開始】番目から〈【個数】個〉<a name="切り出す">切り出す</a>：配列</h3>
			<p>配列から指定した【開始】番号の要素から最後の要素までの配列を取り出します。<br>
				【個数】を指定すると、その個数まで要素を切り出します。</p>
			<pre class="code">一覧={1,2,3,4,5,6,7}
一覧の4番目から3個<strong>切り出して</strong>表示する</pre>
			<p class="usage"><a href="../usage.htm#手順">記号の意味</a></p>
			</div>
		<h2 id="設定項目">設定項目</h2>
		<p>次の設定項目が使用できます。要素型は配列宣言の要素のデータ型を指します。</p>
		<div id="properties">
		        <table class="table table-bordered">
				<thead><tr>
					<th>設定項目</th>
					<th>型</th>
					<th>　</th>
					<th>説明</th>
					</tr></thead>
                <tbody>
				<tr>
					<th><a name="内容">内容</a></th>
					<th>文字列</th>
					<th>◎</th>
					<td>内容を文字列で表します。内容は、各要素を文字列で変換したものを「,」で区切り{ }で囲った形式です。</td>
                </tr>
				<tr>
					<th><a name="個数">個数</a></th>
					<th>整数</th>
					<th>□</th>
					<td>配列の要素数を表します</td>
                </tr>
				<tr>
					<th><a name="クローン">クローン</a></th>
					<th>配列</th>
					<th>□</th>
					<td>要素の内容が同じ、別の配列を表します</td>
                </tr>
				<tr>
					<th><a name="先頭">先頭</a></th>
					<th>要素型</th>
					<th>□</th>
					<td>配列の一番目の要素を表します。<br>
						配列の要素数が0の時は、エラーとなります</td>
                </tr>
				<tr>
					<th><a name="末尾">末尾</a></th>
					<th>要素型</th>
					<th>□</th>
					<td>配列の最後の要素を表します。<br>
						配列の要素が0の時は、エラーとになります</td>
                </tr>
            </tbody>
            </table>
			<p class="usage"><a href="../usage.htm#設定項目">記号の意味</a></p>
			<h2 id="型変換">型変換</h2>
			<p>この種類は、次の別のデータ型へ自動的に変換できます。</p>
			<table class="table table-bordered">
				<thead><tr>
					<th>型</th>
					<th>方向</th>
					<th>説明</th>
                </tr></thead>
                <tbody>
				<tr>
					<th><a href="string.htm">文字列</a></th><th>←→</th><td>
						「内容」設定項目と同じ文字列</td>
                </tr>
                </tbody>
            </table>
</div>

		<h2 id="サンプルコード">サンプルコード</h2>
        <ul>
          <li><a href="#append">配列の追加と挿入</a></li>
          <li><a href="#strcreate">文字列から配列を作る</a></li>
          <li><a href="#savearray">配列をファイルへ格納する</a></li>
          <li><a href="#loadarray">配列をファイルから読み込む</a></li>
          <li><a href="#clone">配列の内容をコピーする</a></li>
        </ul>
        <div id="samples">
            <h3 id="append">配列の追加と挿入</h3>
            <p>配列に最後に要素を追加するには「追加」手順を使います。また、配列の指定した位置に要素を追加するには「挿入する」手順を使います。</p>
            <pre class="code">一覧は｛「ABC」,「EEE」,「DDD」,「CCC」｝
一覧の3番目へ「123」を挿入して表示する
一覧へ「456」を追加する
一覧を表示する</pre>
            <h3 id="strcreate">文字列から配列を作る</h3>
		<p>「配列化」手順を使うことで、文字列から配列を作られます。</p>
		<pre class="code">データは「{AAA,BBB,CCC}」を配列化
データ（1）を表示する
データ（2）を表示する
データ（3）を表示する</pre>
		<h3 id="savearray">配列をファイルへ格納する</h3>
		<p>配列の要素をファイルへ保存するには「保存する」手順を使います。</p>
		<pre class="code">元データは｛「あああ」,「いいい」,｛111,222,333｝｝
元データを「配列.txt」へ保存する</pre>
		<h3 id="loadarray">配列をファイルから読み込む</h3>
<p>ファイルに保存されたテキストから配列を作るには「配列化」手順を使います。 </p>
		        <pre class="code">「配列.txt」から読み込んで、配列化して、データとする
データを表示する</pre>
		
		<h3 id="clone">配列の内容をコピーする</h3>
		<p>配列を単純に別の変数に代入すると、元の配列の内容を変更した際に、代入先の配列の内容も変更されます。このような問題を防ぐには、配列の内容をコピーして置く必要があります。</p>
		<p>配列の内容のコピーを作るには「クローン」設定項目を使います。</p>
		<pre class="code">元配列は{1,2,3,4,5}
新配列は、元配列のクローン
元配列（3）は100
「元配列:[元配列]
新配列:[新配列]」を表示する</pre>
</div><!--/samples-->
    
    </div>
</div>
<div class="footer text-right"><!-- #BeginDate format:Ja2 -->2025年1月5日 <!-- #EndDate -->更新</div><!-- InstanceEndEditable -->
		<p id="page-top"><a href="#">ページ先頭へ</a></p>
		<footer>
    		<hr>
			<p class="text-muted text-right"><a href="https://produ.irelang.jp/">日本語プログラミング言語 プロデル</a> Ver.2.0 &copy; 2007-2025 irelang.jp</p>
		</footer>
	</div><!--/.container-->
	<script src="../js/jquery-1.12.4.min.js"></script>
	<script src="../js/bootstrap.min.js"></script>
	<script src="../js/ie10-viewport-bug-workaround.js"></script>
	<script src="../js/script.js"></script>
    <script src="../js/syntax-highlight.js"></script>
<!-- InstanceBeginEditable name="Script" -->

<!-- InstanceEndEditable -->
</body>
<!-- InstanceEnd --></html>
